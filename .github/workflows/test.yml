name: Test and Quality Checks

on:
  push:
    branches: [main, develop, production]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'

jobs:
  # Code quality and testing
  quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type checking
        run: npx tsc --noEmit

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true

      - name: Run tests with coverage
        run: npm run test:run
        env:
          VITE_API_BASE_URL: http://localhost:8080/api

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: matrix.node-version == 18
        with:
          file: ./coverage/lcov.info
          flags: frontend
          name: dumende-frontend

  # Build verification
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: npm run build
        env:
          VITE_API_BASE_URL: https://dumenden-backend-289960158905.europe-west1.run.app/api
          VITE_APP_ENVIRONMENT: production

      - name: Check build size
        run: |
          if [ -d "dist" ]; then
            echo "Build successful"
            echo "Build size:"
            du -sh dist/
            
            # Check if build is too large (> 10MB)
            BUILD_SIZE=$(du -s dist/ | cut -f1)
            if [ $BUILD_SIZE -gt 10240 ]; then
              echo "Warning: Build size is larger than 10MB"
            fi
          else
            echo "Build failed - dist directory not found"
            exit 1
          fi

  # Security scanning
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD